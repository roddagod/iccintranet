#!/bin/bash

which systemctl &>/dev/null
[[ $? -eq 0 ]] && systemd=1
which sudo &>/dev/null
[[ $? -eq 0 ]] && sudo=1

if [[ $systemd ]]; then
  systemctl list-units | grep onebody.service &>/dev/null
  [[ $? -eq 0 ]] && service_exists=1
else
  service onebody status 2>&1 | grep "unrecognized service" &>/dev/null
  [[ $? -ne 0 ]] && service_exists=1
fi

function p_sudo() {
  if [[ $sudo ]]; then
    if [[ -n $SUDO_USER ]] && [[ $SUDO_USER != "root" ]]; then
      printf "sudo "
    elif [[ -z $SUDO_USER ]] && [[ $USER != "root" ]]; then
      printf "sudo "
    fi
  fi
}

function p_red() {
  echo "$(tput setaf 1)$1$(tput sgr0)"
}

function p_bold() {
  echo "$(tput bold)$1$(tput sgr0)"
}

function restart_or_create_service() {
  if [[ $service_exists ]]; then
    echo "Restarting service"
    if [[ $systemd ]]; then
      systemctl restart onebody
    else
      service onebody restart
    fi
  else
    create_service
  fi
}

function create_service() {
  if [[ ! $service_exists ]]; then
    echo "Creating and starting service"
    onebody scale web=1
    if [[ $systemd ]]; then
      systemctl start onebody
    else
      service onebody start
    fi
    echo
    echo "The \"onebody\" service is running on port 3000."
    echo
    p_red "You'll need to set up a web server to proxy web requests to this port."
    echo "Here's how to do it with nginx (assuming you don't have other sites"
    echo "you serve from this same server):"
    echo
    p_bold "  $(p_sudo)apt-get install -y nginx"
    p_bold "  $(p_sudo)cp /opt/onebody/build/deb/vhost/nginx.conf /etc/nginx/sites-available/onebody"
    p_bold "  $(p_sudo)ln -s /etc/nginx/sites-{available,enabled}/onebody"
    p_bold "  $(p_sudo)rm /etc/nginx/sites-enabled/default"
    p_bold "  $(p_sudo)nginx -s reload"
    echo
  fi
}

onebody config | grep SERVE_ASSETS &>/dev/null || onebody config:set SERVE_ASSETS=true
onebody config | grep PORT=6000    &>/dev/null && onebody config:set PORT=3000

if [[ -e /etc/onebody/database.yml ]]; then
  if ! grep "utf8mb4" /etc/onebody/database.yml &>/dev/null; then
    echo "Switching database encoding to utf8mb4 by updating /etc/onebody/database.yml"
    sed -i 's/encoding: utf8$/encoding: utf8mb4\n  collation: utf8mb4_unicode_ci/' /opt/onebody/config/database.yml
  fi
else
  echo "Building /etc/onebody/database.yml"
  echo -e "production:\n  adapter: mysql2\n  database: onebody\n  host: localhost\n  username: onebody\n  password: onebody\n  encoding: utf8mb4\n  collation: utf8mb4_unicode_ci" > /opt/onebody/config/database.yml
  ln -sf /opt/onebody/config/database.yml /etc/onebody/database.yml
  chown onebody:onebody /etc/onebody/database.yml
fi

if [[ ! -e /etc/onebody/secrets.yml ]]; then
  echo "Building /etc/onebody/secrets.yml"
  cp /opt/onebody/config/secrets.yml{.example,}
  secret=$(onebody run rake secret)
  sed -i "s/SOMETHING_RANDOM_HERE/$secret/" /opt/onebody/config/secrets.yml
  ln -sf /opt/onebody/config/secrets.yml /etc/onebody/secrets.yml
  chown onebody:onebody /etc/onebody/secrets.yml
fi

if [[ ! -e /etc/onebody/email.yml ]]; then
  echo "Building /etc/onebody/email.yml"
  echo -e 'production:'                                      > /opt/onebody/config/email.yml
  echo -e '  smtp:'                                         >> /opt/onebody/config/email.yml
  echo -e '    address:   "smtp.mailgun.org"'               >> /opt/onebody/config/email.yml
  echo -e '    port:      "587"'                            >> /opt/onebody/config/email.yml
  echo -e '    user_name: "SMTP_LOGIN_GOES_HERE"'           >> /opt/onebody/config/email.yml
  echo -e '    password:  "PASSWORD_GOES_HERE"'             >> /opt/onebody/config/email.yml
  echo -e '    domain:    "YOUR_VERIFIED_DOMAIN_GOES_HERE"' >> /opt/onebody/config/email.yml
  echo -e '    authentication: plain'                       >> /opt/onebody/config/email.yml
  ln -sf /opt/onebody/config/email.yml /etc/onebody/email.yml
  chown onebody:onebody /etc/onebody/email.yml
  echo
  p_red "A sample email config file has been written to /etc/onebody/email.yml"
  echo "See https://github.com/churchio/onebody/wiki/Email-Setup for help setting up an email service."
  echo
fi

echo "Checking for database"
onebody run rake db:version &>/dev/null
if [[ $? -eq 0 ]]; then
  echo "Updating database"
  onebody run rake db:migrate
  restart_or_create_service
else
  echo
  p_red "To create the OneBody database, run the following commands manually:"
  echo
  p_bold "  mysql -u root -p -e \"grant all on onebody.* to onebody@localhost identified by 'onebody';\""
  echo   "  (enter your MySQL root password or press enter for none)"
  p_bold "  $(p_sudo)onebody run rake db:setup"
  echo
  restart_or_create_service
fi

echo "Updating crontab"
onebody run whenever -w
